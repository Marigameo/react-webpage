{"ast":null,"code":"import _objectSpread from\"D:/react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/react/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/react/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/react/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import DoctorSearch from'./DoctorSearch';import PlacesAutocomplete,{geocodeByAddress,getLatLng}from'react-places-autocomplete';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PlacesInput=/*#__PURE__*/function(_React$Component){_inherits(PlacesInput,_React$Component);var _super=_createSuper(PlacesInput);function PlacesInput(props){var _this;_classCallCheck(this,PlacesInput);_this=_super.call(this,props);_this.handleChange=function(address){_this.setState({address:address});};_this.handleSelect=function(address){geocodeByAddress(address).then(function(results){return getLatLng(results[0]);}).then(function(latLng){return console.log('Success',latLng);}).catch(function(error){return console.error('Error',error);});};_this.state={address:''};return _this;}_createClass(PlacesInput,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(PlacesAutocomplete,{value:this.state.address,onChange:this.handleChange,onSelect:this.handleSelect,children:function children(_ref){var getInputProps=_ref.getInputProps,suggestions=_ref.suggestions,getSuggestionItemProps=_ref.getSuggestionItemProps,loading=_ref.loading;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"search-box\",style:{padding:\"0\"},children:/*#__PURE__*/_jsxs(\"form\",{className:\"form-design\",action:\"assets/webpages/list.html\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-location\",children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},getInputProps({placeholder:'Search Places ...',className:'location-search-input'})),{},{type:\"text\",id:\"location\",placeholder:\"Search Location\"})),/*#__PURE__*/_jsxs(\"div\",{className:\"autocomplete-dropdown-container\",children:[loading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),suggestions.map(function(suggestion){var className=suggestion.active?'suggestion-item--active':'suggestion-item';// inline style for demonstration purpose\nvar style=suggestion.active?{backgroundColor:'rgba(238, 238, 232, .9)',padding:\".5rem\",cursor:'pointer'}:{backgroundColor:'#fdfdfd',padding:\".5rem\",cursor:'pointer'};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},getSuggestionItemProps(suggestion,{className:className,style:style})),{},{children:/*#__PURE__*/_jsx(\"span\",{children:suggestion.description})}));})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-info\",children:/*#__PURE__*/_jsx(DoctorSearch,{})})]})})});}});}}]);return PlacesInput;}(React.Component);export default PlacesInput;","map":{"version":3,"sources":["D:/react/src/components/Home/app/PlacesInput.js"],"names":["React","DoctorSearch","PlacesAutocomplete","geocodeByAddress","getLatLng","PlacesInput","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","catch","error","state","getInputProps","suggestions","getSuggestionItemProps","loading","padding","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","Component"],"mappings":"sbAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,kBAAP,EACEC,gBADF,CAEEC,SAFF,KAGO,2BAHP,C,2FAKMC,CAAAA,W,sHACJ,qBAAYC,KAAZ,CAAmB,6CACjB,uBAAMA,KAAN,EADiB,MAKnBC,YALmB,CAKJ,SAAAC,OAAO,CAAI,CACxB,MAAKC,QAAL,CAAc,CAAED,OAAO,CAAPA,OAAF,CAAd,EACD,CAPkB,OASnBE,YATmB,CASJ,SAAAF,OAAO,CAAI,CACxBL,gBAAgB,CAACK,OAAD,CAAhB,CACGG,IADH,CACQ,SAAAC,OAAO,QAAIR,CAAAA,SAAS,CAACQ,OAAO,CAAC,CAAD,CAAR,CAAb,EADf,EAEGD,IAFH,CAEQ,SAAAE,MAAM,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,MAAvB,CAAJ,EAFd,EAGGG,KAHH,CAGS,SAAAC,KAAK,QAAIH,CAAAA,OAAO,CAACG,KAAR,CAAc,OAAd,CAAuBA,KAAvB,CAAJ,EAHd,EAID,CAdkB,CAEjB,MAAKC,KAAL,CAAa,CAAEV,OAAO,CAAE,EAAX,CAAb,CAFiB,aAGlB,C,8CAaD,iBAAS,CACP,mBACE,KAAC,kBAAD,EACE,KAAK,CAAE,KAAKU,KAAL,CAAWV,OADpB,CAEE,QAAQ,CAAE,KAAKD,YAFjB,CAGE,QAAQ,CAAE,KAAKG,YAHjB,UAKG,2BAAGS,CAAAA,aAAH,MAAGA,aAAH,CAAkBC,WAAlB,MAAkBA,WAAlB,CAA+BC,sBAA/B,MAA+BA,sBAA/B,CAAuDC,OAAvD,MAAuDA,OAAvD,oBACC,kCACE,YAAK,SAAS,CAAC,YAAf,CAA4B,KAAK,CAAE,CAACC,OAAO,CAAE,GAAV,CAAnC,uBAEA,cAAM,SAAS,CAAC,aAAhB,CAA8B,MAAM,CAAC,2BAArC,wBAEA,aAAK,SAAS,CAAC,iBAAf,wBACA,4CAAYJ,aAAa,CAAC,CAACK,WAAW,CAAE,mBAAd,CAAmCC,SAAS,CAAE,uBAA9C,CAAD,CAAzB,MAAmG,IAAI,CAAC,MAAxG,CAA+G,EAAE,CAAC,UAAlH,CAA6H,WAAW,CAAC,iBAAzI,GADA,cAEE,aAAK,SAAS,CAAC,iCAAf,WACKH,OAAO,eAAI,mCADhB,CAEKF,WAAW,CAACM,GAAZ,CAAgB,SAAAC,UAAU,CAAI,CAC3B,GAAMF,CAAAA,SAAS,CAAGE,UAAU,CAACC,MAAX,CAChB,yBADgB,CAEhB,iBAFF,CAGA;AACA,GAAMC,CAAAA,KAAK,CAAGF,UAAU,CAACC,MAAX,CACZ,CAAEE,eAAe,CAAE,yBAAnB,CAA6CP,OAAO,CAAE,OAAtD,CAAgEQ,MAAM,CAAE,SAAxE,CADY,CAEZ,CAAED,eAAe,CAAE,SAAnB,CAA6BP,OAAO,CAAE,OAAtC,CAA+CQ,MAAM,CAAE,SAAvD,CAFF,CAGA,mBACA,0CACQV,sBAAsB,CAACM,UAAD,CAAa,CACvCF,SAAS,CAATA,SADuC,CAEvCI,KAAK,CAALA,KAFuC,CAAb,CAD9B,4BAME,sBAAOF,UAAU,CAACK,WAAlB,EANF,GADA,CAUD,CAlBF,CAFL,GAFF,GAFA,cA4BA,YAAK,SAAS,CAAC,aAAf,uBACE,KAAC,YAAD,IADF,EA5BA,GAFA,EADF,EADD,EALH,EADF,CAiDD,C,yBAnEuBhC,KAAK,CAACiC,S,EAoE9B,cAAe5B,CAAAA,WAAf","sourcesContent":["import React from 'react'\r\nimport DoctorSearch from './DoctorSearch'\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from 'react-places-autocomplete';\r\n \r\nclass PlacesInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { address: ''};\r\n  }\r\n  \r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n \r\n  handleSelect = address => {\r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => console.log('Success', latLng))\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address}\r\n        onChange={this.handleChange}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <div className=\"search-box\" style={{padding: \"0\"}}>\r\n           \r\n            <form className=\"form-design\" action=\"assets/webpages/list.html\">\r\n\r\n            <div className='search-location'>\r\n            <input  {...getInputProps({placeholder: 'Search Places ...', className: 'location-search-input',})}type=\"text\" id=\"location\" placeholder=\"Search Location\"/>                \r\n              <div className=\"autocomplete-dropdown-container\">\r\n                  {loading && <div>Loading...</div>}\r\n                  {suggestions.map(suggestion => {\r\n                      const className = suggestion.active\r\n                      ? 'suggestion-item--active'\r\n                      : 'suggestion-item';\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                      ? { backgroundColor: 'rgba(238, 238, 232, .9)',padding: \".5rem\",  cursor: 'pointer' }\r\n                      : { backgroundColor: '#fdfdfd',padding: \".5rem\", cursor: 'pointer' };\r\n                      return (\r\n                      <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                          className,\r\n                          style,\r\n                          })}\r\n                      >\r\n                        <span>{suggestion.description}</span>\r\n                        </div>\r\n                        );\r\n                    })}\r\n                  </div>\r\n            </div>\r\n\r\n            <div className=\"search-info\">\r\n              <DoctorSearch/>\r\n            </div>\r\n          \r\n            </form>\r\n          </div>\r\n        </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    );\r\n   \r\n  }\r\n} export default PlacesInput;"]},"metadata":{},"sourceType":"module"}