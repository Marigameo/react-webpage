{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\Navbar-Demo-master\\\\src\\\\components\\\\Home\\\\placesapi.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport DoctorSearch from './app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Placesapi extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.state = {\n      address: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          style: {\n            padding: \"0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-design\",\n            action: \"assets/webpages/list.html\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group search-location\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                  placeholder: 'Search Places ...',\n                  className: 'location-search-input'\n                }),\n                type: \"text\",\n                className: \"form-control\",\n                id: \"location\",\n                placeholder: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"autocomplete-dropdown-container\",\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 37\n                }, this), suggestions.map(suggestion => {\n                  const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n                  const style = suggestion.active ? {\n                    backgroundColor: 'rgba(238, 238, 232, .2)',\n                    padding: \".5rem\",\n                    cursor: 'pointer'\n                  } : {\n                    backgroundColor: '#fdfdfd',\n                    padding: \".5rem\",\n                    cursor: 'pointer'\n                  };\n                  return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                      className,\n                      style\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: suggestion.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group search-info\",\n              children: /*#__PURE__*/_jsxDEV(DoctorSearch, {\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"search-btn\",\n              type: \"submit\",\n              className: \"btn btn-primary search-btn mt-0\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 99\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 133\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Placesapi;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/Navbar-Demo-master/src/components/Home/placesapi.js"],"names":["React","FontAwesomeIcon","faSearch","PlacesAutocomplete","geocodeByAddress","getLatLng","DoctorSearch","Placesapi","Component","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","catch","error","state","render","getInputProps","suggestions","getSuggestionItemProps","loading","padding","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport DoctorSearch from './app';\n \nclass Placesapi extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: ''};\n  }\n  \n  handleChange = address => {\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error('Error', error));\n  };\n \n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <div className=\"search-box\" style={{padding: \"0\"}}>\n           \n            <form className=\"form-design\" action=\"assets/webpages/list.html\">\n                <div className=\"form-group search-location\">\n\n\n                    <input  {...getInputProps({placeholder: 'Search Places ...', className: 'location-search-input',})}type=\"text\" className=\"form-control\" id=\"location\" placeholder=\"Search Location\"/>\n                    <div className=\"autocomplete-dropdown-container\">\n                        {loading && <div>Loading...</div>}\n                        {suggestions.map(suggestion => {\n                            const className = suggestion.active\n                            ? 'suggestion-item--active'\n                            : 'suggestion-item';\n                            // inline style for demonstration purpose\n                            const style = suggestion.active\n                            ? { backgroundColor: 'rgba(238, 238, 232, .2)',padding: \".5rem\",  cursor: 'pointer' }\n                            : { backgroundColor: '#fdfdfd',padding: \".5rem\", cursor: 'pointer' };\n                            return (\n                            <div\n                                {...getSuggestionItemProps(suggestion, {\n                                className,\n                                style,\n                                })}\n                            >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n\n                </div>\n                <div className=\"form-group search-info\">\n                <DoctorSearch className=\"form-control\"/>\n              \n                </div>\n                <button id=\"search-btn\" type=\"submit\" className=\"btn btn-primary search-btn mt-0\"><FontAwesomeIcon icon={faSearch}/><span>Search</span></button>\n            </form>\n        </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n   \n  }\n} export default Placesapi;"]},"metadata":{},"sourceType":"module"}